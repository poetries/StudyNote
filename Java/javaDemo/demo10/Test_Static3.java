//本程序证明了：一个类的属性可以是类对象

/*
	总结：
	
	1、静态成员属于类本身，而不是属于对象，被类的所有对象所共有
	2、即便不创建对象，也可以使用类本身的静态成员
	3、静态成员分为：
				静态数据成员
				静态方法成员
				
	4、使用静态成员的两种方法：
						类名.静态成员名
						类对象名.静态成员名
						
						
	关键字--static方法：
	
	1、在静态方法里只能直接调用同类中的其他静态成员（包括静态方法和变量），而不能直接访问类中的非静态成员，这是因为
	对于非静态方法和变量，需要先创建类的实例对象后才可以使用，而静态方法在使用前不用任何对象
	
	2、静态方法不能以任何方式引用this和super关键字，因为静态方法在使用前不用创建任何实例对象，当惊天方法被调用时，this所引用的对象
	根本就没有产生
	
	3、静态方法只能访问静态成员，但非静态方法却可以访问类中的所有成员，包括静态成员

*/
class A
{
	public void f()
	{
		System.out.printf("哈哈哈!\n");
	}
}

class B
{
	public int i = 10;
	public A aa = new A();//aa是一个对象，aa是否也是B的属性？是
	
	public void g()
	{
		aa.f();
	}
	
}

public class Test_Static3
{
	public static void main(String[] args)
	{
		B bb = new B();
		bb.g();
	}
}
